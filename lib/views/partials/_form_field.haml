- field_options = options.slice(:id, :name, :placeholder)

.input{class: [options[:type], options[:class]]}
  %label{for: options[:id]} #{options[:label]}:
  - case options[:type].to_sym
    - when :textarea
      %textarea{id: options[:id], name: options[:name], rows: options[:rows] || 20, placeholder: options[:placeholder]}= html_escape(options[:value])

    - when :radio
      - options[:options].each do |o|
        .option
          %input{field_options.merge(type: 'radio', value: o, checked: options[:value] == o)}= o

    - when :dropdown
      %select{field_options}
        - options[:options].each do |val, text|
          %option{value: val, selected: options[:value] == val}= text

    - when :datetime
      %input{field_options.merge(value: options[:value].to_formatted_s(:db))}

    - else # normal inputs
      %input{field_options.merge(value: options[:value])}

  - if options[:errors]
    .error= options[:errors].join(", ")

  - if options[:hint]
    .hint= options[:hint]
